{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAkB3C,SAASG,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CACNM,SAAAT,EACAU,MAAAT,IAGFG,EAAO,CACLK,SAAAT,EACAU,MAAAT,G,GAGHA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAzC7Df,SAASC,cAAc,UAE/BuB,iBAAiB,SAAS,SAAAC,GAC5BA,EAAEC,iBAKF,IAJA,IAAMX,EAAQY,OAAO5B,EAAW6B,OAC1BC,EAAOF,OAAOzB,EAAU0B,OACxBE,EAASH,OAAOxB,EAAYyB,OAC9BG,EAAWhB,EACNiB,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC3BA,EAAI,IACND,GAAYF,GAGdzB,EAAc4B,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector(\"input[name='delay']\");\nconst stepInput = document.querySelector(\"input[name='step']\");\nconst amountInput = document.querySelector(\"input[name='amount']\");\nconst btn = document.querySelector('button');\n\nbtn.addEventListener('click', e => {\n  e.preventDefault();\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  let newDelay = delay;\n  for (let i = 0; i < amount; i += 1) {\n    if (i > 0) {\n      newDelay += step;\n    }\n\n    createPromise(i + 1, newDelay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","Number","value","step","amount","newDelay","i"],"version":3,"file":"03-promises.8b6bbb64.js.map"}